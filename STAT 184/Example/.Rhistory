library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library(dplyr)
diamonds_summary <- diamonds %>%
library(ggplot2)
print(diamonds_summary)
diamonds_summary <- diamonds %>%
group_by(cut) %>%
summarise(
Count = n(),
Min_x = min(x), Q1_x = quantile(x, 0.25), Median_x = median(x), Q3_x = quantile(x, 0.75), Max_x = max(x), MAD_x = mad(x), Mean_x = mean(x), SD_x = sd(x),
Min_y = min(y), Q1_y = quantile(y, 0.25), Median_y = median(y), Q3_y = quantile(y, 0.75), Max_y = max(y), MAD_y = mad(y), Mean_y = mean(y), SD_y = sd(y),
Min_z = min(z), Q1_z = quantile(z, 0.25), Median_z = median(z), Q3_z = quantile(z, 0.75), Max_z = max(z), MAD_z = mad(z), Mean_z = mean(z), SD_z = sd(z)
)
print(diamonds_summary)
View(diamonds_summary)
diamonds_summary <- diamonds %>%
group_by(cut) %>%
summarise(
Max_x = max(x),
Max_y = max(y),
Max_z = max(z)
)
print(diamonds_summary)
library(janitor)
library(dplyr)
library(knitr)
library(kableExtra)
table1 <- data %>%
tabyl(Column1, Column2) %>%
adorn_totals("row") %>%
adorn_totals("col") %>%
adorn_percentages("row") %>%
adorn_pct_formatting() %>%
adorn_ns() %>%
kable() %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
library(googlesheets4)
library(googlesheets4)
gs4_auth()
data <- read_sheet(sheet_url)
sheet_url <- "https://docs.google.com/spreadsheets/d/1cn4i0-ymB1ZytWXCwsJiq6fZ9PhGLUvbMBHlzqG4bwo/edit?gid=597536282"
data <- read_sheet(sheet_url)
male_table <- data %>%
filter(Gender == "Male") %>%
tabyl(Rank, Branch) %>%
adorn_totals("row") %>%
adorn_totals("col") %>%
adorn_percentages("row") %>%
adorn_pct_formatting() %>%
adorn_ns()
gs4_auth(token = NULL)  # Prompt for re-authentication
male_table <- data %>%
dplyr::filter(Gender == "Male") %>%
tabyl(Rank, Branch) %>%
adorn_totals("row") %>%
adorn_totals("col") %>%
adorn_percentages("row") %>%
adorn_pct_formatting() %>%
adorn_ns()
gs4_auth(token = NULL)  # Prompt for re-authentication
male_table <- data %>%
dplyr::filter(Gender == "Male") %>%
tabyl(Rank, Branch) %>%
adorn_totals("row") %>%
male_table <- data %>%
dplyr::filter(Gender == "Male") %>%
tabyl(Rank, Branch) %>%
adorn_totals("row") %>%
adorn_totals("col") %>%
adorn_percentages("row") %>%
adorn_pct_formatting() %>%
adorn_ns()
adorn_totals("col") %>%
adorn_percentages("row") %>%
adorn_pct_formatting() %>%
adorn_ns()
adorn_ns()
# Frequency table for female soldiers
female_table <- data %>%
dplyr::filter(Gender == "Female") %>%
tabyl(Rank, Branch) %>%
adorn_totals("row") %>%
adorn_totals("col") %>%
adorn_percentages("row") %>%
adorn_pct_formatting() %>%
adorn_ns()
# Render the Tables
male_table %>%
kbl() %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
male_table %>%
kbl() %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
# Frequency table for male soldiers
male_table <- data %>%
dplyr::filter(Gender == "Male") %>%
tabyl(Rank, Branch) %>%
adorn_totals("row") %>%
adorn_totals("col") %>%
adorn_percentages("row") %>%
adorn_pct_formatting() %>%
adorn_ns()
data <- read_sheet(sheet_url)
print(head(data))  # Print first few rows to check data
print(head(data))  # Print first few rows to check data
sheet_url <- "https://docs.google.com/spreadsheets/d/1cn4i0-ymB1ZytWXCwsJiq6fZ9PhGLUvbMBHlzqG4bwo/edit?gid=597536282"
data <- read_sheet(sheet_url)
gs4_auth(token = NULL)
sheet_url <- "https://docs.google.com/spreadsheets/d/1cn4i0-ymB1ZytWXCwsJiq6fZ9PhGLUvbMBHlzqG4bwo/edit?gid=597536282"
data <- read_sheet(sheet_url)
data <- read_sheet(sheet_url)
print(diamonds_summary_y)
View(diamonds_summary)
library(ggplot2)
library(dplyr)
library(ggplot2)
data <- diamonds
library(ggplot2)
diamonds_summary_y <- data %>%
group_by(cut) %>%
diamonds_summary_y <- data %>%
group_by(cut) %>%
summarise(
Count = n(),
Min_y = min(y),
Q1_y = quantile(y, 0.2),  # 1st QUIN-tile (20th percentile)
Q2_y = quantile(y, 0.4),  # 2nd QUIN-tile (40th percentile)
Median_y = median(y),     # Median (50th percentile)
Q3_y = quantile(y, 0.6),  # 3rd QUIN-tile (60th percentile)
Q4_y = quantile(y, 0.8),  # 4th QUIN-tile (80th percentile)
Max_y = max(y),
Mean_y = mean(y),         # Arithmetic mean
SD_y = sd(y)              # Arithmetic standard deviation
)
summarise(
Count = n(),
Min_y = min(y),
Q1_y = quantile(y, 0.2),  # 1st QUIN-tile (20th percentile)
Q2_y = quantile(y, 0.4),  # 2nd QUIN-tile (40th percentile)
Median_y = median(y),     # Median (50th percentile)
Q3_y = quantile(y, 0.6),  # 3rd QUIN-tile (60th percentile)
Q4_y = quantile(y, 0.8),  # 4th QUIN-tile (80th percentile)
Max_y = max(y),
Mean_y = mean(y),         # Arithmetic mean
SD_y = sd(y)              # Arithmetic standard deviation
)
diamonds_summary_y <- data %>%
group_by(cut) %>%
summarise(
Count = n(),               # Count of observations
Min_y = min(y),            # Minimum width
Q1_y = quantile(y, 0.2),   # 1st QUIN-tile (20th percentile)
Q2_y = quantile(y, 0.4),   # 2nd QUIN-tile (40th percentile)
Median_y = median(y),      # Median (50th percentile)
Q3_y = quantile(y, 0.6),   # 3rd QUIN-tile (60th percentile)
Q4_y = quantile(y, 0.8),   # 4th QUIN-tile (80th percentile)
Max_y = max(y),            # Maximum width
Mean_y = mean(y),          # Arithmetic mean
SD_y = sd(y)               # Standard deviation
)
print(diamonds_summary_y)
library(palmerpenguins)
install.packages("palmerpenguins")
library(palmerpenguins)
library(dplyr)
library(broom)
adelie_data <- penguins %>%
filter(species == "Adelie") %>%
drop_na(bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex, island)
adelie_data <- penguins %>%
filter(species == "Adelie") %>%
drop_na(bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex, island)
install.packages("tidyr")  # Install tidyr if not already installed
install.packages("tidyr")  # Install tidyr if not already installed
library(palmerpenguins)
library(dplyr)
library(broom)
library(tidyr)
install.packages("tidyr")  # Install tidyr if not already installed
library(palmerpenguins)
library(dplyr)
library(broom)
library(tidyr)
install.packages("tidyr")  # Install tidyr if not already installed
library(palmerpenguins)
library(dplyr)
library(broom)
library(tidyr)
adelie_data <- penguins %>%
filter(species == "Adelie") %>%
drop_na(bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex, island)
penguinModel <- lm(
body_mass_g ~ bill_length_mm + bill_depth_mm +
flipper_length_mm + sex + island,
data = adelie_data
)
tidy_summary <- tidy(penguinModel)
print(tidy_summary)
print(female_data)
file_path <- "C:/Users/hanzi/OneDrive/Desktop/STAT 184/Example/US Armed Forces (6_2024) - Sheet1.csv"
data <- read.csv(file_path, stringsAsFactors = FALSE)
# Rename columns for better readability
colnames(data) <- c(
"Pay_Grade", "Army_Male", "Army_Female", "Army_Total",
"Navy_Male", "Navy_Female", "Navy_Total",
"Marine_Male", "Marine_Female", "Marine_Total",
"Air_Force_Male", "Air_Force_Female", "Air_Force_Total",
"Space_Force_Male", "Space_Force_Female", "Space_Force_Total",
"Total_Male", "Total_Female", "Grand_Total"
)
cleaned_data <- data[-c(1, 2), ]
male_data <- cleaned_data %>%
select(Pay_Grade, Army_Male, Navy_Male, Marine_Male, Air_Force_Male, Space_Force_Male) %>%
filter(!is.na(Pay_Grade))
female_data <- cleaned_data %>%
select(Pay_Grade, Army_Female, Navy_Female, Marine_Female, Air_Force_Female, Space_Force_Female) %>%
filter(!is.na(Pay_Grade))
print("Male Frequency Table:")
print(male_data)
print("Female Frequency Table:")
print(female_data)
